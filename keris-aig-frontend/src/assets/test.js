/* */ /***************************************** header에 위와 같이 사용한다. ****************************************/ /** * Calls actual mail() function, but in a safe_mode aware fashion * Also, unless sendmail_path points to sendmail (or something that * claims to be sendmail), don't pass params (not a perfect fix, * but it will do) * @param string $to To * @param string $subject Subject * @param string $body Message Body * @param string $header Additional Header(s) * @param string $params Params * @access private * @return bool */
function cdml_mathjax_init() //수식 랜더링 { if (typeof MathJax == 'undefined') return; if( MathJax == null ) return; MathJax.Callback.Queue( MathJax.Hub.Register.StartupHook("TeX Jax Ready",function () { var VERSION = "1.0"; var TEX = MathJax.InputJax.TeX, TEXDEF = TEX.Definitions, MML = MathJax.ElementJax.mml, HTML = MathJax.HTML; TEXDEF.macros.ccbox = "ccbox"; TEX.Parse.Augment({ // Implements \ccbox[len]{value} ccbox: function (name) { var len = this.GetBrackets(name), val = this.GetArgument(name); //var cls = "cc-tex-box"; var style = ""; var ccbox = null; var asd = $(this); if( val =="①" || val == "②" || val == "③" || val == "④" || val == "⑤" || val == "⑥" || val =="⑦" || val == "⑧" || val == "⑨" || val == "⑩" || val == "⑪" || val == "⑫" ) { len *= 8; style = "width:" + len + "px; display:inline-block;" + "height: 18px; border: 1px dotted grey !important;vertical-align: middle;vertical-align: middle;text-align: center;font-size: 10pt;" //ccbox = HTML.Element("input",{type:"text", className:cls}); ccbox = HTML.Element("span",{className:"cc-input"}); ccbox.setAttribute("data-index", val); } else { len *= 5; style = "width:" + len + "px;display:inline-block;height:14px;border: 1px solid grey !important;vertical-align: middle;" ccbox = HTML.Element("span",{className:"cc-tex-box"}); } ccbox.setAttribute("xmlns","http://www.w3.org/1999/xhtml"); ccbox.setAttribute("style", style); var mml = MML["annotation-xml"](MML.xml(ccbox)).With({encoding:"application/xhtml+xml",isToken:true}); this.Push(MML.semantics(mml)); } }); }) ); MathJax.Hub.Register.StartupHook("End",function () { $( ".cc-tex-box" ).on('click', function() { var className = $(this).attr('class'); }); //cdmlApi.cc_input_init(); }); $(".cc-input").parent().css( "background-color", "transparent" ); } function cdml_mathjax_rerender()//수식 다시한번 랜더링 { MathJax.Hub.Queue(["Typeset",MathJax.Hub]); } function cdml_empty( value )//empty check { if( value == null || value == "" || value == "undefined" || value == undefined ) return true; return false; } function cdml_str_trim( value )//trim { if( !cdml_empty(value) ) return value.replace( /(\s*)/g, ""); return ""; } function cdml_array_empty_check( arr )// empty arr index check { var result = new Array(); for( var i in arr ) { if( !cdml_empty( arr[i] ) ) result.push( arr[i] ); } return result; } function array_move(arr, old_index, new_index)//arr order change { var element = arr[old_index]; arr.splice(old_index, 1); arr.splice(new_index, 0, element); return arr; } function replace_special_str( str )// special str replace { switch( str ) { case "①" : str = 1; break; case "②" : str = 2; break; case "③" : str = 3; break; case "④" : str = 4; break; case "⑤" : str = 5; break; case "⑥" : str = 6; break; case "⑦" : str = 7; break; case "⑧" : str = 8; break; case "⑨" : str = 9; break; case "⑩" : str = 10; break; case "⑪" : str = 11; break; case "⑫" : str = 12; break; case "⑬" : str = 13; break; case "⑭" : str = 14; break; case "⑮" : str = 15; break; } return str; } function set_input_answer( question_ids ) { var question_id_arr = question_ids.split(","); var question_id = ""; for(var i in question_id_arr) { question_id = question_id_arr[i]; var cc_answer_type_cd = cdmlApi.cdml_questions[question_id].cc_answer_type_cd; if( cc_answer_type_cd == "1@" || cc_answer_type_cd == "2@" || cc_answer_type_cd == "3@" ) { var user_answer_arr = new Array();//유저입력정답 var answer_str_arr = new Array(); $('.cc-input').each(function(index, item) { var id = $(item).data("answer_id");//cc_input 에 answer_id를 가져옴 if( !cdml_empty( id ) && id == question_id_arr[i] )//해당 id와 채점하려는 id가 같는지 체크 { var str = $(this).data("index"); str = replace_special_str(str); answer_str_arr[str] = $(this).val(); } }); var user_answer = ""; for(var m in answer_str_arr ) { if( user_answer != "" ) user_answer += "**" + answer_str_arr[m]; else user_answer += answer_str_arr[m]; } cdmlApi.user_answers[question_id] = user_answer; } } } /* * Global 변수 * cdml_api_url : Api Server url * cdml_img_url : **/ //var cdml_img_url = "http://kr.img.cms.cceapi.com/cdml/img/"; //var cdml_api_url = "http://kr.cms.cceapi.com/question_helpers/questions"; /** * CdmlApi * * Param * @access : * @question_list : [문항id],[문항id],[문항id] * Return * * **/ function CdmlApi() { this.question_ids = new Array(); // <== question_list split comma this.cdml_questions = {}; this.user_answers ={}; this.skips = {}; } CdmlApi.prototype.init = function ( question_list, scoring_yn ) { question_id_arr = question_list.split(","); for( var k in question_id_arr ) this.question_ids.push(question_id_arr[k]); for( var i=0 ; i'); } else { input_html = input_html.replace(/<\/span>/, ""); $(this).replaceWith(''); } k++; legend_indexes[id] = k; } }); } CdmlApi.prototype.set_answer_action = function( question_id, cc_answer_type_cd, answer ) { var answer_arr = answer.split("**"); if( cc_answer_type_cd == "1@" || cc_answer_type_cd == "2@" || cc_answer_type_cd == "3@" ) { var i = 0; $(".cc-input").each( function( index, item ) { var id = $(this).data("answer_id"); if( i > answer_arr.length ) return false; if( id == question_id ) { $(this).val( answer_arr[i] ); i++; } }); } else if( cc_answer_type_cd == "5@" ) { var i = 0; $(".cdml_select_aas").each( function( index, item ) { var id = $(this).data("id"); if( i > answer_arr.length ) return false; if( id == question_id && $(this).data("index") == answer_arr[i] ) { $(this).trigger('click'); i++; } }); } else if( cc_answer_type_cd == "ch") { i=0; for(var i in answer_arr) { var answer = answer_arr[i]; switch( answer ) { case "①" : answer = "l1"; break; case "②" : answer = "l2"; break; case "③" : answer = "l3"; break; case "④" : answer = "l4"; break; case "⑤" : answer = "l5"; break; case "⑥" : answer = "l6"; break; case "⑦" : answer = "l7"; break; case "⑧" : answer = "l8"; break; case "⑨" : answer = "l9"; break; case "⑩" : answer = "l10"; break; } $("#ccapi_content_" + question_id ).find( "." + answer ).trigger('click'); } } else if( cc_answer_type_cd == "4@" ) { i=0; for( var i in answer_arr ) { answer_split = answer_arr[i].split(/-/); for( var j in answer_split ) { answer_str_cut = answer_split[j].split(/:/); $(".pnc_span").each( function( index, item ) { var id = $(this).data("id"); if( id == question_id && $(this)[0].getAttribute("kind") == answer_str_cut[0] && $(this)[0].getAttribute("number") == answer_str_cut[1] ) { $(this).trigger('click'); return false; } }); } } } } CdmlApi.prototype.do_scoring = function () { $(document).on("click", "span.cc-input", function() { cdmlApi.cc_input_init(); }); var cdml_api_this = this; $(".cdml_options .option" ).on("click", function () { var $p = $(this).closest('.cdml_options'); var $now = $(this); var pType = $p.data('type'); var id = $p.data('id'); var cho_answer = ""; var remove_answer = ""; var answer = ""; var checked = 0; var child = $p.context.children; // 객관식형 아님 if( pType.indexOf('qn')==-1 ) return false; if( $(this).hasClass('checked')) // 체크되어 있던 보기를 클릭하는 것이라면 { $(this).removeClass('checked').children('.checker').remove(); // 해체하고 끝낸다. cho_answer = answer_cho( child[0].className.replace(" checked", ""), id, 0 ); remove_answer = CdmlApi.prototype.getUserAnswer(id); answer = remove_answer.replace(cho_answer, ""); CdmlApi.prototype.setUserAnswer(id, answer); } else { if( pType=='qn-1' ) // 단일 선택의 경우 { $p.find('.checked').removeClass('checked').children('.checker').remove(); // 기존의 선택 보기를 취소하고 } else // 복수 선택의 경우 { checked = $p.find('.checked').length; // 이미 갯수를 초과한 경우에는 // 아무런 동작도 하지 않고 끝냄. 기존 선택된 보기 중 하나를 취소하도록 유도하는 것 if(checked >= parseInt(pType.replace('qn-', ''), 10)) return; } // 방금 클릭한 것만 선택한다. $(this).addClass('checked').append($('
', { class : '
checker ' })); if( checked != 0 ) { cho_answer = answer_cho( child[0].className.replace(" checked", ""), id, checked ); cdmlApi.setUserAnswer(id, cho_answer); } else { cho_answer = answer_cho( child[0].className.replace(" checked", ""), id, checked ); cdmlApi.setUserAnswer(id, cho_answer); } } if( checked > parseInt(pType.replace('
qn - ', '
'), 10)) alert('
초과 '); return false; }); function answer_cho(li_answer, id, index){ var qn_answer = ""; var answer = ""; var answer_row = ""; if(index == 0) { switch( li_answer ) //l1 checked 형태의 문자를 l1 으로 변환 { case "l1" : qn_answer = "①"; break; case "l2" : qn_answer = "②"; break; case "l3" : qn_answer = "③"; break; case "l4" : qn_answer = "④"; break; case "l5" : qn_answer = "⑤"; break; }//switch }else{ answer = CdmlApi.prototype.getUserAnswer(id); if(answer != "") answer_row = answer + "**"; switch( li_answer ) { case "l1" : qn_answer = answer_row + "①"; break; case "l2" : qn_answer = answer_row + "②"; break; case "l3" : qn_answer = answer_row + "③"; break; case "l4" : qn_answer = answer_row + "④"; break; case "l5" : qn_answer = answer_row + "⑤"; break; }//switch } return qn_answer; } curtestfocusobject = null;//클릭한 인풋박스 속성을 담기위한 변수 $(".legend").on('
click ', function() {//단답형 선택박스 var question_id = $(this).data("answer_id"); var f_legend = $(this); f_legend = f_legend[0].getAttribute("txtlegend"); var f_legend_arr = f_legend.split("|");// |기준으로 잘라서 1개씩 배열로 담음 var this_id = $(this);//클릭한요소 저장 var obj= $(this); var question = $(this).closest('.cdml_question '); curtestfocusobject=obj; if(document.getElementById("legend_span")==null) { var dspan=document.createElement("div"); dspan.setAttribute("id","legend_span"); dspan.setAttribute("name","legend_span"); document.body.appendChild(dspan); } var sHTML= ""; sHTML+="
선택 "; sHTML+="
"; sHTML+="
"; sHTML+="
"; for(var i=0; i" + f_legend_arr[i] + "<\/span><\/div>";
}
sHTML += "<\/div><\/div>";
document.getElementById("legend_span").innerHTML = sHTML; //html에 선택박스생성 var tmpobj=document.getElementById("cdml_divlegend");//tmpobj 에 divlegend를 담는다. var rect2=tmpobj.getBoundingClientRect();//현재 tmpobj 위치를 구함 var rect=obj[0].getBoundingClientRect();//오브젝트 위치를 구함.. var x1=rect.left+ (document.documentElement.scrollLeft || document.body.scrollLeft)+(rect.right-rect.left-(rect2.right-rect2.left) )/2; var y1=rect.bottom+ (document.documentElement.scrollTop || document.body.scrollTop); if(x1<0)x1=0; //좌측으로 벗어나는 경우 if(x1+(rect2.right-rect2.left)> (document.body.clientWidth || document.documentElement.clientWidth)) //우측으로 벗어나는 경우 { x1= (document.body.clientWidth || document.documentElement.clientWidth) -(rect2.right-rect2.left); } tmpobj.style.left="" + x1+"px"; tmpobj.style.top="" + y1+"px"; tmpobj.display=""; }); $( document ).on('click', '.divlegendlist .divlegenditem', function() { var legend_str = $(this).data("legend_str"); legend_str=unescape(legend_str); legend_str=legend_str.replace(/'/g,"'"); legend_str=legend_str.replace(/</g,"<"); legend_str=legend_str.replace(/>/g,">"); curtestfocusobject[0].value=legend_str; bnkHideLegend(); }); //셀렉트박스를 닫음 function bnkHideLegend() { var popobj=document.getElementById("cdml_divlegend"); if(popobj)popobj.style.display="none"; } $( document ).on('click', '#cdml_divlegend .divlegendclose', function(){ var popobj=document.getElementById("cdml_divlegend"); if(popobj)popobj.style.display="none"; }); //================================================ // 영역선택형 //================================================ $(".cdml_select_aas").html( " " ); var aas_img = null; $(".cdml_question .cdml_select_aas" ).on("click", function () { var choice_check = "";//선택되어있나 체크 var select_img = ""; //선택시 보여지는 이미지 var index = ""; //정답 var id = ""; //id var multi_check = ""; //여러개 체크 가능여부 if( !cdml_empty( $(this).data("choice_check") ) ) choice_check = $(this).data("choice_check"); if( !cdml_empty( $(this).data("multi_check") ) ) multi_check = $(this).data("multi_check"); select_img = $(this).data("chk_img"); index = $(this).data("index"); id = $(this).data("id"); var img_url = cdml_img_url + "chk_ico0"+select_img+".png"; var click_aas_str = ""; var answer = ""; //다중선택이 가능할 경우 if( multi_check != 1 ) { if( choice_check == "" ) { $(this).data("choice_check", "y"); click_aas_str += '선택'; $(this).html(click_aas_str); /*정답 저장*/ if( !cdml_empty( CdmlApi.prototype.getUserAnswer(id) ) ) answer = CdmlApi.prototype.getUserAnswer(id); if( answer != "" ) answer += "**"+index; else answer += index; CdmlApi.prototype.setUserAnswer(id, answer); } else { //선택된걸 다시 선택했을경우 $(this).data("choice_check", ""); $(this).children().remove(); //저장되있던 정답을 꺼내옴. if( !cdml_empty( CdmlApi.prototype.getUserAnswer(id) ) ) answer = CdmlApi.prototype.getUserAnswer(id); //선택한 정답을 지워버리고 다시 저장 answer = answer.replace(index, ""); CdmlApi.prototype.setUserAnswer(id, answer); } } else { //다중선택이 불가능할 경우 if( choice_check == "y" ) { //이미 선택되어 있는걸 클릭했을 경우 지워버림. $(this).data("choice_check", ""); $(this).children().remove(); CdmlApi.prototype.setUserAnswer(id, ""); } else { $('.cdml_select_aas').each(function()//data 속성이 변경이 안되었을경우를 대비... (가끔 변경이 안되서 클릭오류)... { if( id == $(this).data("id")) { $(this).data("choice_check", ""); $(this).children().remove(); } }); click_aas_str += '선택'; $(this).data("choice_check", "y"); $(this).html(click_aas_str); CdmlApi.prototype.setUserAnswer(id, index); } } }); //================================================ // 선그리기 //================================================ var lin_oldnum=""; //선그리기 변수선언 var lin_oldord=""; var lin_oldkind=""; var lin_oldobj; var lin_flag=false; var first_check=""; var sinput=""; $("span .pnc_span").on("click", function() { var id = $(this).data("id"); var span_tag = $(this); var question = $(this).closest('div');//선그리는 영역을 감싸고있는 div를 구함 var obj = $(this).closest('.question_box');//문항을 감싸고있는 div를 구함 var select_img = $(this); var pnc_number = select_img[0].getAttribute('number');// number번호 var pnc_kind = select_img[0].getAttribute('kind_num');//위에서부터 센 번호 if(lin_flag==false) //선을 그린곳이 없다면 { lin_oldobj=select_img[0]; lin_oldnum=id; lin_oldord=pnc_number; lin_oldkind=pnc_kind; select_img[0].src= cdml_img_url+"sdot.png"; lin_flag=true; } else { if(lin_oldnum!=id) { lin_oldobj.src= cdml_img_url+"cdot.png"; lin_oldobj=obj; lin_oldnum=id; lin_oldord=pnc_number; lin_oldkind=pnc_kind; select_img[0].src=cdml_img_url+"sdot.png"; return; } else if(lin_oldord==pnc_number && lin_oldkind==pnc_kind) { select_img[0].src=cdml_img_url+"/cdot.png"; lin_flag=false; return; } if(Math.abs(pnc_kind-lin_oldkind)!=1 || parseInt(pnc_kind/2)==parseInt(lin_oldkind/2))return; var s1=(pnc_kind==1 || pnc_kind==3)?pnc_number:lin_oldord; var s2=(pnc_kind==1 || pnc_kind==3)?lin_oldord:pnc_number; var k= (pnc_kind==1 || pnc_kind==2)?1:2; var flag1=(k==1?"A":"C"); var flag2=(k==1?"B":"D"); if(bnkDrawLine(select_img[0],lin_oldobj,id,s1,s2,k,"blue",true)) { var sinput = ""; if( !cdml_empty(CdmlApi.prototype.getUserAnswer(id) ) ) sinput = CdmlApi.prototype.getUserAnswer(id); if(sinput!="") sinput += "**" + flag1 + ":" + s1 + "-" + flag2 + ":" + s2; else sinput += flag1 + ":" + s1 + "-" + flag2 + ":" + s2; CdmlApi.prototype.setUserAnswer(id, sinput); } lin_flag=false; lin_oldobj.src=cdml_img_url+"cdot.png" } }); //선그리는 부분 function bnkDrawLine(obj1,obj2,num,o1,o2,kind,bcolor,btest) { var lin_spc=6; if(document.getElementById("lin_" + num + "_" + o1 + "_" + o2 + "_" + kind))return false; if(obj1==null || obj2==null)return false; var rect,x1,x2,y1,y2,dist; if(true){ for(var i=1;i<20;i++){ if(document.getElementById("lin_" + num + "_" + o1 + "_" + i + "_" + kind)){ var o=lin_flag; lin_flag=false; var v=""; if(""+kind=="1") v="A:"+o1+"-B:"+i; else v="C:"+o1+"-D:"+i; bnkDelLine(num+"_"+o1+"_"+i+"_"+kind,num,v); lin_flag=o; }//if }//for }//if var objproblem=document.getElementById("pnc_lines"); for(var i=0;i<2;i++) //로딩이 느려서 거리가 1000이상일 경우는 두번 호출 { rect=obj1.getBoundingClientRect(); x1=rect.left+ (document.documentElement.scrollLeft || document.body.scrollLeft)+lin_spc; y1=rect.top+ (document.documentElement.scrollTop || document.body.scrollTop)+lin_spc; rect=obj2.getBoundingClientRect(); x2=rect.left+ (document.documentElement.scrollLeft || document.body.scrollLeft)+lin_spc; y2=rect.top+ (document.documentElement.scrollTop || document.body.scrollTop)+lin_spc; dist=Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)); if(dist<1000)break; } rect=objproblem.getBoundingClientRect(); x1-=rect.left+(document.documentElement.scrollLeft || document.body.scrollLeft); x2-=rect.left+(document.documentElement.scrollLeft || document.body.scrollLeft); y1-=rect.top+(document.documentElement.scrollTop || document.body.scrollTop); y2-=rect.top+(document.documentElement.scrollTop || document.body.scrollTop); var k=lin_spc; var x=x1; var y=y1; var shtml=""; var oldx=0,oldy=0; if(dist<1000) { while(dist-lin_spc-1>k) { x=x1+ (x2-x1) * (k/dist); y=y1+ (y2-y1) * (k/dist); if( Math.sqrt((oldx-x)*(oldx-x) + (oldy-y)*(oldy-y))>=1.0 ) { while(dist-lin_spc-1>k) { x=x1+ (x2-x1) * (k/dist); y=y1+ (y2-y1) * (k/dist); if( Math.sqrt((oldx-x)*(oldx-x) + (oldy-y)*(oldy-y))>=1.0 ) { var divline=document.createElement("span"); divline.setAttribute("name","lin_" + num + "_" + o1 + "_" + o2 + "_" + kind); divline.setAttribute("id","lin_" + num + "_" + o1 + "_" + o2 + "_" + kind); divline.style.cssText="position:absolute;left:" + Math.round(x) + "px;top:" + Math.round(y) + "px; width:5px;height:5px;z-index:9999;font-size:0;display:inline- block"; objproblem.appendChild(divline); var v=""; if(""+kind=="1") { v="A:"+o1+"-B:"+o2; } else { v="C:"+o1+"-D:"+o2; } divline.innerHTML="
<
\/div>" } k+=2; } } return true; } } } function bnkDelLine(id,num,v) { if(lin_flag==true)return; var arr=document.getElementsByName("lin_"+id); for(var i=arr.length-1;i>=0;i--) arr[i].parentNode.removeChild(arr[i]); id = id.substring(0, id.indexOf("_") ); var sinput = ""; if( !cdml_empty(CdmlApi.prototype.getUserAnswer(id)))/ / 정답 불러오기 sinput = CdmlApi.prototype.getUserAnswer(id);
if (sinput.length != 7) sinput = (sinput).replace('**' + v, ""); // else if (sinput.length < 9 ) // sinput = ""; CdmlApi.prototype.setUserAnswer(id, sinput);//정답 저장 } } CdmlApi.prototype.eb_setOX = function( correct_str ) { if( typeof correct_str == "string" ) correct_arr = correct_str.split("-"); else correct_arr = correct_str; $(".ccapi_scoring_div").each( function( index, item ) { if( correct_arr.length == index ) return false; var child_div = $(this).children(".cdml_scoring").remove(); id = $(item).data("id"); $(this).prepend("

"); }); } //채점 CdmlApi.prototype.isCorrect = function ( question_id ) { var question_id_arr = question_id.split(", "); var correct_arr = new Array();//맞음 틀림 var question_id = "
"; for(var i in question_id_arr) { var question_type_cd = this.cdml_questions[ question_id_arr[i] ].question_type_cd; question_id = question_id_arr[i]; var cdml_answer_arr = new Array();//정답 var user_answer_arr = new Array();//유저입력정답 var answer_str_arr = new Array(); // if( question_type_cd == "
sac " || question_type_cd == "
smg " ) set_input_answer(question_id); var user_answer = this.user_answers[ question_id_arr[i] ];//채점하고자 하는 유저 정답을 가져옴. var answer_arr = this.cdml_questions[ question_id_arr[i] ].api_answer_json;//채점하고자 하는 채점정답을 가져옴 // var answer_type = "
"; var answer_type = this.cdml_questions[ question_id_arr[i] ].cc_answer_type_cd; /* if( !cdml_empty(answer_arr) ) answer_type = this.cdml_questions[ question_id_arr[i] ].api_answer_json[0].answer_type;*/ var answer_length = 0; if( !cdml_empty(answer_arr) ) var answer_length = answer_arr.length;//정답 개수 else { correct_arr[ question_id_arr[i] ] = 0; continue; } var user_type_answer_checks = new Array();//유저정답 array if( !cdml_empty(user_answer) ) { user_type_answer_checks = user_answer.split(" ** ");//유저정답을 ,기준으로 자름. 단답형들 공백, 대소문자 구분, 유순형, 무순형 처리를 위해서.. user_type_answer_checks = cdml_array_empty_check( user_type_answer_checks ); } if( answer_type == "
5 @ " )//영역선택형 채점 { // var user_type_answer_checks = user_answer.split(", "); // user_type_answer_checks = cdml_array_empty_check( user_type_answer_checks ); var aas_answer_count = this.cdml_questions[ question_id_arr[i] ].api_answer_aas_count; var answer_str_length = user_type_answer_checks.length; if( aas_answer_count < answer_str_length ) { correct_arr[ question_id_arr[i] ] = 0; continue; } } var correct_length = 0;//맞은 정답 개수 //단답형일경우.. if( /*question_type_cd == "
sac "*/ answer_type == '3@' )//묶음형 채점 { // var user_type_answer_checks = new Array();//유저정답 array var db_answer_checks = new Array(); // if( !cdml_empty(user_answer) ) // { // user_type_answer_checks = user_answer.split(", ");//유저정답을 ,기준으로 자름. 단답형들 공백, 대소문자 구분, 유순형, 무순형 처리를 위해서.. // user_type_answer_checks = cdml_array_empty_check( user_type_answer_checks ); // } if( !cdml_empty(answer_arr) ) { for( var j in answer_arr ) { answer_case_arr = answer_arr[j].answer.split(" / C / "); for(var p in answer_case_arr ) { if( !cdml_empty(db_answer_checks[p]) ) db_answer_checks[p] = db_answer_checks[p] + ", " +answer_case_arr[p]; else db_answer_checks[p] = answer_case_arr[p]; } } } var answer_scoring_arr = new Array(); for(var k in db_answer_checks) { var answer_checkers = new Array();//채점정답 if( !cdml_empty(db_answer_checks[k]) ) answer_checkers = db_answer_checks[k].split(", "); for(var o in answer_checkers) { var space_check = answer_arr[o].ignore_space_yn.toUpperCase(); var case_check = answer_arr[o].check_case_yn.toUpperCase(); var user_answer = user_type_answer_checks[o]; var db_answer = answer_checkers[o]; if(space_check == "
Y ")//공백무시 { user_answer = cdml_str_trim( user_answer ); db_answer = cdml_str_trim( db_answer ); } if(case_check == "
N ") { user_answer = user_answer.toLowerCase(); db_answer = db_answer.toLowerCase(); if( user_answer == db_answer ) { correct_length++; if( !cdml_empty(answer_scoring_arr[k]) ) answer_scoring_arr[k] = answer_scoring_arr[k] + 1; else answer_scoring_arr[k] = 1; } } else { if( user_answer == db_answer ) { correct_length++; if( !cdml_empty(answer_scoring_arr[k]) ) answer_scoring_arr[k] = answer_scoring_arr[k] + 1; else answer_scoring_arr[k] = 1; } } } } var correct_count = 0; for(var k=0; k < answer_scoring_arr.length; k++ ) { if( correct_count < answer_scoring_arr[k] ) correct_count = answer_scoring_arr[k]; } correct_length = correct_count; } else if( /*question_type_cd == "
sao "*/ answer_type == '1@' )//단답 유순형 { var answer_scoring_arr = new Array(); for(var k in user_type_answer_checks )//유저정답 기준 loop { var answer_checkers = new Array();//채점정답 if( !cdml_empty(answer_arr[k].answer) ) answer_checkers = answer_arr[k].answer.split(" / C / ");//채점정답 경우의수 처리 ``기준으로 자름. var space_check = answer_arr[k].ignore_space_yn.toUpperCase();//공백 var case_check = answer_arr[k].check_case_yn.toUpperCase();//대소구분 for(var o in answer_checkers)//채점정답 length 만큼 loop { var user_answer = user_type_answer_checks[k]; var db_answer = answer_checkers[o]; if(space_check == "
Y ")//공백무시 { user_answer = cdml_str_trim( user_answer ); db_answer = cdml_str_trim( db_answer ); } if(case_check == "
N ")//대소구분 { user_answer = user_answer.toLowerCase(); db_answer = db_answer.toLowerCase(); if( user_answer == db_answer ) { correct_length++; break; } } else { if( user_answer == db_answer ) { correct_length++; break; } } } } } else { //단답 무순형 제외하고 채점. var user_type_answer_checks = new Array(); var answers = new Array(); var answer_checkers = new Array(); if( !cdml_empty(user_answer) ) { user_type_answer_checks = user_answer.split(" ** ");//유저정답을 ,기준으로 자름. 단답형들 공백, 대소문자 구분, 유순형, 무순형 처리를 위해서..*/ //user_type_answer_checks = cdml_array_empty_check( user_type_answer_checks ); // 2019-01-23 주석. 수식박스 처리하다가.. } if( !cdml_empty(answer_arr) ) { answer_checkers = answer_arr; if( answer_type == "
5 @ " ) { var edit_answer = new Array(); var arr_count = answer_checkers[0].answer.length; var answer_length = arr_count; for (var l = 0; l < arr_count; l++) { var json = new Object(); json.answer = answer_checkers[0].answer.charAt(l); json.ignore_space_yn = "
N "; json.check_case_yn = "
N "; edit_answer.push( json ); } answer_checkers = edit_answer; } } for( var t = 0; t < answer_checkers.length; t++ ) { var space_check = answer_checkers[t].ignore_space_yn.toUpperCase();//공백 var case_check = answer_checkers[t].check_case_yn.toUpperCase();//대소구분 answer_case_arr = answer_checkers[t].answer.split(" / C / "); var roop_check = true; if(space_check == "
Y ")//공백무시 user_type_answer_checks[t] = cdml_str_trim(user_type_answer_checks[t]); if(case_check == "
N ")//대소구분 { for(var k = 0; k < user_type_answer_checks.length; k++ ) { var user_answer_check = user_type_answer_checks[k].toLowerCase(); for(var q = 0; q < answer_case_arr.length; q++) { var answer_check = answer_case_arr[q].toLowerCase(); if( user_answer_check == answer_check ) { correct_length++; //answer_checkers.splice(t, 1); roop_check = false; break; } } if( roop_check == false ) break; } } else { for(var k = 0; k < user_type_answer_checks.length; k++ ) { for(var q = 0; q < answer_case_arr.length; q++) { var answer_check = answer_case_arr[q]; if( user_type_answer_checks[k] == answer_check )//유저정답 1번 을 정답 n번까지 비교 { correct_length++; roop_check = false; break; } } if( roop_check == false ) break; } } } } if( answer_length == correct_length) correct_arr[ question_id_arr[i] ] = "
2 ";//맞음 else if( correct_length != 0 && answer_type != "
5 @ ") // 5@ == 영역선택형 correct_arr[ question_id_arr[i] ]= "
1 ";//일부맞음 else correct_arr[ question_id_arr[i] ] = "
0 ";//틀림 } return correct_arr; } CdmlApi.prototype.setOX = function ( correct_arr ) { var keys = Object.keys( correct_arr ); for( var i = 0; i < keys.length; i++ ) { $(".ccapi_scoring_div ").each(function (index, item) { var id = "
"; if( !cdml_empty( $(item).data("
id ") ) ) { id = $(item).data("
id ");//문항을 감싸고있는 div id를가져옴 if( keys[ i ] == id)//해당 문항을 감싸고있는 id와 채점하려는 id 와 같을경우 { //여러번 채점버튼 클릭시 중첩되는부분 해결 var child_div = $(this).children(".cdml_scoring ").remove(); id = $(item).data("
id "); $(this).prepend("

"); } } }); } } CdmlApi.prototype.setUserAnswer = function ( question_id, answer ) { cdmlApi.user_answers[ question_id ] = answer; } CdmlApi.prototype.getUserAnswer = function ( question_id ) { return cdmlApi.user_answers[question_id]; } CdmlApi.prototype.q = function( question_id ) { if( this.cdml_questions.hasOwnProperty(question_id) ) return this.cdml_questions[question_id]; else return null; } CdmlApi.prototype.i = function( index ) { var question_id = this.question_ids[index-1]; return this.q( question_id ); } /************************************************** * * * Edubase API * * * **************************************************/ CdmlApi.prototype.question_number_sort = function() { var i = 1; $(".ccapi_content ").each( function( index, item ) { $(this).children().first().attr("
id ", "
question_container " + i); i++; }); } CdmlApi.prototype.eb_setOX = function( correct_str ) { if( typeof correct_str == "
string " ) correct_arr = correct_str.split(" - "); else correct_arr = correct_str; $(".ccapi_scoring_div ").each( function( index, item) { if( correct_arr.length == index ) return false; var child_div = $(this).children(".cdml_scoring ").remove(); id = $(item).data("
id "); $(this).prepend("

"); }); } CdmlApi.prototype.getProblemList = function () { var cdml_api_this = this; question_id_arr = cdml_api_this.question_ids; var question_ids = "
"; for( var i in question_id_arr ) { if( question_ids != "
" ) { question_ids += ", " + question_id_arr[i]; } else question_ids += question_id_arr[i]; } return question_ids; } CdmlApi.prototype.delProblem = function ( question_id ) { $("#
ccapi_content_ " + question_id).remove(); question_ids = this.question_ids; for( var i in question_ids ) { if( question_ids[i] == question_id ) { this.question_ids.splice(i,1); delete this.cdml_questions[ question_id ]; delete this.user_answers[ question_id ]; break; } } $(".ccapi_question_number ").each( function( index, item ) { number = index + 1 + ".
"; $(this).html(number); }); } CdmlApi.prototype.moveProblem = function (question_id, number ) { var standard_id = "
"; var i = $(".ccapi_content ").length; if( number > i ) number = i; var old_index = "
"; $(".ccapi_content ").each( function( index, item ) { if( number == 1) { standard_id = $(this).attr("
id "); standard_id = standard_id.substring(14); if( question_id == standard_id ) return false; $(this).before($( "#
ccapi_content_ " + question_id )); return false; } if( index + 1 == number ) { standard_id = $(this).attr("
id "); standard_id = standard_id.substring(14);; if( question_id == standard_id ) return false; $(this).after( $( "#
ccapi_content_ " + question_id ) ); return false; } }); question_ids = this.question_ids; for(var j in question_ids ) { if(question_ids[j] == question_id) { this.question_ids = array_move(question_ids, j, number - 1); break; } } cdmlApi.question_number_sort(); } CdmlApi.prototype.addProblem = function( question_id, number, scoring, user_answer, before_html, after_html, message ) { if( this.cdml_questions.hasOwnProperty( question_id ) ) { console.log("
문항ID를 확인해주세요 "); return; } cdmlApi.init( question_id ); var question_number = this.question_ids.length; var question = cdmlApi.i( question_number ); var question_html = question.display("
question_container "+question_number, "
", "
n "); $(".ccapi_content ").last().after("
"+ after_html +question_html + after_html + "
"); var number = "
" + number + "
"; $("#
question_container "+question_number).before( before_html ); $("#
question_container "+question_number).after( after_html ); cdml_mathjax_rerender(); if( !cdml_empty( user_answer ) ) { cdmlApi.set_answer_action( question.id, question.question_type_cd, user_answer ); } if( !cdml_empty( scoring ) ) { var array = new Array(); array[question.id] = scoring; cdmlApi.setOX( array ); } if( !cdml_empty( message ) ) { alert( message ); } cdmlApi.do_scoring(); } CdmlApi.prototype.getInputByPid = function( question_id ) { set_input_answer( question_id ); return this.user_answers[question_id]; } CdmlApi.prototype.getInputByIndex = function( number ) { var question_id = cdmlApi.getPidByIndex(number); set_input_answer( question_id ); return this.user_answers[question_id]; } CdmlApi.prototype.setInputByPid = function( question_id, answer ) { cdmlApi.cc_input_init(); cdmlApi.set_answer_action( question_id, this.cdml_questions[question_id].question_type_cd, answer ); } CdmlApi.prototype.getProblemDivByPid = function( question_id ) { return $("#
ccapi_content_ " + question_id); } CdmlApi.prototype.getInputList = function( question_ids ) { set_input_answer( question_ids ); var question_id_arr = question_ids.split(", "); var user_answers = "
"; for( var i in question_id_arr ) { if( user_answers == "
" ) user_answers += this.user_answers[ question_id_arr[i] ]; else user_answers += " | "+ this.user_answers[ question_id_arr[i] ]; } return user_answers; } CdmlApi.prototype.chkNoSolve = function() { set_input_answer( cdmlApi.getProblemList() ); var question_ids = this.question_ids; var i = 0; var no_solve_id = "
"; for( var i in question_ids ) { if( cdml_empty( this.user_answers[ question_ids[i] ] ) || this.user_answers[ question_ids[i] == " ** "] ) { if( no_solve_id == "
" ) no_solve_id = question_ids[i]; else no_solve_id += ", " + question_ids[i]; } } return no_solve_id; } CdmlApi.prototype.changeMode = function( mode ) { if( mode == "
afterexam ") { $(".cdml_options.option ").off('click'); $(".legend ").off('click'); $(".cc - input ").off('click'); $(".pnc_span ").off('click'); $(".cc - input ").each( function( index, item ) { $(this).attr("
readonly ", true); }); } } CdmlApi.prototype.getTestResult = function() { var correct_arr = cdmlApi.isCorrect( cdmlApi.getProblemList() ); var correct = "
"; var question_ids = this.question_ids; for( var i in question_ids ) { if( correct == "
" ) correct = correct_arr[ question_ids[i] ]; else correct += " - " +correct_arr[ question_ids[i] ]; } return correct; } CdmlApi.prototype.replaceProblem = function( old_question_id, new_question_id ) { var question_number = 0; if( this.cdml_questions.hasOwnProperty(new_question_id) && !this.cdml_questions.hasOwnProperty(old_question_id)) { console.log("
문항ID를 확인해주세요 "); return; } for( var i in this.question_ids ) { if( this.question_ids[i] == old_question_id ) { this.question_ids.splice(i, 1, new_question_id); delete this.cdml_questions[old_question_id]; delete this.user_answers[old_question_id]; question_number = parseInt(i) + 1; break; } } cdmlApi.init( new_question_id ); this.question_ids.splice( this.question_ids.length - 1, 1 ); var question = cdmlApi.i( question_number ); var question_html = question.display("
question_container "+question_number, "
", "
n "); $("#
ccapi_content_ " + old_question_id).html("
"+ question_html +"
"); $("#
ccapi_content_ " + old_question_id).attr("
id ", "
ccapi_content_ "+new_question_id); cdml_mathjax_rerender(); cdmlApi.do_scoring(); } CdmlApi.prototype.getRows = function() { return this.question_ids.length; } CdmlApi.prototype.getPTypeByIndex = function( number ) { var question_type_cd; var cdml_api_this = this; $(".ccapi_content ").each( function(index, item) { if( index +1 == number ) { id = $(this).attr("
id "); id = id.substring(14); question_type_cd = cdml_api_this.cdml_questions[id].question_type_cd; return false; } }); return question_type_cd; } CdmlApi.prototype.getPidByIndex = function( number ) { var id = "
"; $(".ccapi_content ").each( function(index, item) { if( index +1 == number ) { id = $(this).attr("
id "); id = id.substring(14); return false; } }); return id; } CdmlApi.prototype.get_checkboxes = function() { var question_ids = "
"; $("
input[name = 'ccapi_checkbox']: checked ").each(function() { if( question_ids == "
") question_ids += $(this).val(); else question_ids += ", " + $(this).val(); }); return question_ids; } CdmlApi.prototype.getIndexByPid = function( question_id ) { var number = 0; $(".ccapi_content ").each( function( index, item ) { id = $(this).attr("
id "); id = id.substring(14) if( id == question_id ) { number = index + 1; return false; } }); return number; } CdmlApi.prototype.showOneProblem = function(index) { var question = cdmlApi.i(index); question.display( "
question_container1 ", "
", "
", "
n "); $("#
question_container1 ").data("
id ", question.id); $("#
question_container1 ").parent().attr("
id ", "
ccapi_content_ "+question.id); cdml_mathjax_rerender(); cdmlApi.do_scoring(); } CdmlApi.prototype.setAnswer = function( index, answer, userinput ) { var question_id = cdmlApi.getPidByIndex(index); cdmlApi.set_answer_action( question_id, this.cdml_questions[question_id].question_type, userinput ); } //============================================================================= //============================================================================= function CdmlQuestion( json, scoring_yn ) { this.scoring_yn = scoring_yn; //================================================== // Cms variable //================================================== this.id = parseInt(json.id); this.body_title_html = json.body_title_html; this.body_html = json.body_html; this.body_ex_html = json.body_ex_html; this.list_html = json.list_html; this.question_group_id = json.question_group_id; this.sentence_html = json.sentence_html; this.sub_sentence_id = json.sub_sentence_id; this.sub_sentence_html = json.sub_sentence_html; this.small_group_id = json.small_group_id; this.small_group_html = json.small_group_html; this.cc_answer = json.cc_answer; this.answer_html = json.answer_html; this.explanation_html = json.explanation_html; this.hint_html = json.hint_html; this.help1_html = json.help1_html; this.help2_html = json.help2_html; this.help3_html = json.help3_html; this.help4_html = json.help4_html; this.help5_html = json.help5_html; this.difficulty_cd = json.difficulty_cd; this.difficulty_cd_value = json.difficulty_cd_value; this.question_type_cd = json.question_type_cd; this.question_type_cd_value = json.question_type_cd_value; this.question_attr_cd = json.question_attr_cd; this.question_attr_cd_value = json.question_attr_cd_value; this.cc_answer_type_cd = json.cc_answer_type_cd; this.cc_answer_type_cd_value = json.cc_answer_type_cd_value; this.analysis_id = json.analysis_id; this.studytree_id = json.studytree_id; //================================================== // Api variable //================================================== this.api_answer_json = null; this.api_answer_ch_count = 0; this.api_answer_aas_count = 0; if( !cdml_empty( json.cc_answer ) ) { this.api_answer_json = json.cc_answer; /*json으로 parse 못할때가 있음 한번더 체크.*/ if( typeof this.api_answer_json !== 'object' && !cdml_empty(this.api_answer_json) ) this.api_answer_json = JSON.parse( this.api_answer_json ); if( typeof this.api_answer_json !== 'object' && !cdml_empty(this.api_answer_json) ) this.api_answer_json = JSON.parse( this.api_answer_json ); //객관식 count if( !cdml_empty(this.api_answer_json) ) { this.api_answer_ch_count = this.api_answer_json.length; //영역선택형 count // scahn this.api_answer_aas_count = this.api_answer_json[0].answer.length; if( this.api_answer_json[0].hasOwnProperty("
answer ") ) this.api_answer_aas_count = this.api_answer_json[0].answer.length; else this.api_answer_aas_count = 0; } } this.init(); } CdmlQuestion.prototype.init = function() { if( this.cc_answer_type_cd == "
ch ") { this.list_html = "
" + this.list_html + "
"; } else if( this.cc_answer_type_cd == "
1 @ " || this.cc_answer_type_cd == "
2 @ " || this.cc_answer_type_cd == "
3 @ " ) { //정답 범례 구하기. var legend_arr = Array(); for (var i in this.api_answer_json) { if( this.api_answer_json[i].legend != "
NULL " && this.api_answer_json[i].legend != "
") legend_arr.push(this.api_answer_json[i].legend); else legend_arr.push("
"); } // legend_arr.length 로 조건문을 처리해도 되지만 데이터 오류를 위해... var cc_input_count = this.body_html.match(/cc-input/gi); if( cc_input_count != null) { for( var i in cc_input_count ) { var legend_str = "
"; if( !cdml_empty(legend_arr[i]) ) { legend_str = "
legend ' data-answer_id='
"+ this.id +"
' name='
"+ this.id +"
' setlegend='
y ' txtlegend='
"+legend_arr[i]+"
'readonly='
readOnly '"; this.body_html = this.body_html.replace( /"cc-input"/, "'
cc - input sa "+legend_str ); } else this.body_html = this.body_html.replace(/"
cc - input "/, "
'cc-input sa'
data - answer_id = '"+this.id+"'
"); } } else this.body_html = this.body_html.replace(/"
cc - input "/gi, "
'cc-input sa'
data - answer_id = '"+this.id+"'
"); } else if( this.cc_answer_type_cd == "
4 @ ") // 선그리기 { this.body_html = "
"+this.body_html; var left_pnc = this.body_html.match(/■/gi); var right_pnc = this.body_html.match(/▣/gi); var j = 1; for(var i in left_pnc) { var pnc_tag = "
"; this.body_html = this.body_html.replace('>■', ' data-id="
'+this.id+'
">'+pnc_tag); j++; } j=1; for(var i in right_pnc) { var pnc_tag = "
"; this.body_html = this.body_html.replace('>▣', ' data-id="
'+this.id+'
">'+pnc_tag); j++; } left_pnc = this.body_html.match(/◆/gi); right_pnc = this.body_html.match(/◈/gi); j=1; for(var i in left_pnc) { var pnc_tag = "
"; this.body_html = this.body_html.replace('>◆', ' data-id="
'+this.id+'
">'+pnc_tag); j++; } j=1; for(var i in right_pnc) { var pnc_tag = "
"; this.body_html = this.body_html.replace('>◈', ' data-id="
'+this.id+'
">'+pnc_tag); j++; } } else if( this.cc_answer_type_cd == "
5 @ " ) // 영역선택형 { /*정답 데이터가 없으면 오류나는것을 방지*/ var aas_select_img = "
"; if( !cdml_empty(this.api_answer_json) ) aas_select_img = this.api_answer_json[0].check_case_yn;//체크이미지 else aas_select_img = "
1 "; var aas_multi_check = this.api_answer_aas_count; this.body_html = this.body_html.replace(/"
cc - input "/gi, "
'cc-input cdml_select_aas'
data - id = '"+this.id+"'
data - chk_img = '"+aas_select_img+"'
data - multi_check = '"+aas_multi_check+"'
style = 'border:0px; display:block; '
"); this.body_html = this.body_html.replace(/
") ; text_cut = this.body_html.substring( this.body_html.indexOf('
")+5 );*/ } } } else // 논술형 등등.. { } } CdmlQuestion.prototype.display = function( container_id, no, scope, skip_yn ) { var question_html = "
"; if( skip_yn == 'n' ) { if( !cdml_empty( this.question_group_id) ) { question_html += '
'; question_html += this.sentence_html; question_html += '
'; } if( !cdml_empty(this.sub_sentence_id) ) { question_html += '
'; question_html += this.sub_sentence_html; question_html += '
'; } if( !cdml_empty(this.small_group_id) ) { question_html += '
'; question_html += this.small_group_html; question_html += '
'; } } question_html += '
'; question_html += this.body_html; question_html += '
'; question_html += '
'; question_html += this.list_html; question_html += '
'; if( !cdml_empty(this.body_ex) ) { question_html += '
'; question_html += this.body_ex_html; question_html += '
'; } question_html = question_html.replace( "[#NO#] ", no ); question_html = question_html.replace( "[#SCOPE#] ", scope ); $("#" + container_id ).html( question_html ); return question_html; }